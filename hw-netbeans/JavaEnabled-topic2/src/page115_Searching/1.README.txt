Searching
---------
Searching a data set is a common activity in computing. If the data set is
relatively small, the search algorithm need not be highly efficient. Sometimes
simple is better. But as the data becomes large, then efficiency becomes very
important.

A linear search visits each element in the data set, sequentially, until the
desired item is found (or not found). This is simple, and works on sorted and
unsorted data sets. The downside is that it is very slow on large data sets.
The efficiency is O(n).

A binary search is harder to implement, but very fast to execute. The data set
must be sorted before the search. To search for an item, the data set is split
in half; the half that does not contain the item is ignored; repeat until the
item is found (or not found). The efficiency is O(log n).


LinearSearch.java
-----------------
   Performs a linear search on an array of random int's.
   Uses a for loop to visit each element of the array until it finds the number.
   If it finds the number, it breaks out of the for loop.


BinarySearch.java
-----------------
   Performs a binary search on an array of sorted, random int's.
   Uses a divide and conquer approach.
   The array must be sorted before searching.
   Split the array in half, ignore the portion that does not contain the
   number, repeat until the number is found.

Exercise: Instead of using a for-loop to fill the array with sorted int's,
          fill the array with random numbers, and then use BubbleSort and
          SelectionSort to sort the data.

Exercise: Create a Swing app that searches for students by fname, lname, id.
          Student details kept in a Student class.
          Student class needs compareFName, compareLName, compareID methods.
          Student data read from a text file. (student-data.csv)
          Data stored in RAM as Student[].
          Count the file records to determine the size of Student[].
          To search by fname or lname, use linear search.
          To search by id, use binary search, first sorted using any sort alg.
          Search results go into a linked list, and then written to GUI text area.
          GUI should include a radioButton group for the three search criteria.


SearchSortApp.java
------------------
   A simple app that uses all three sort algorithms, and the two search
   algorithms.

